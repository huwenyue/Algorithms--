//312. Burst Balloons
https://leetcode.com/problems/burst-balloons/

class Solution {
public:
    int maxCoins(vector<int>& nums) {
        int n = nums.size();
        if(n==0)
            return 0;
        int a[n+2];
        a[0] = a[n+1] = 1;
        for(int i=1; i<=n; ++i)
            a[i] = nums[i-1];
        int f[n+2][n+2];   //f[i][j]:从i+1到j-1最多能获得的金币数
        fill(f[0], f[0]+(n+2)*(n+2), 0);
        // 初始化：f[i][i+1] = 0
        
        int j;
        for(int len=3; len<=n+2; len++){
            for(int i=0; i<=n-len+2; i++){
                j = i+len-1;
                //k is the index of last balloon burst
                for(int k=i+1; k<j; k++)
                   f[i][j]  = max(f[i][j], f[i][k]+f[k][j]+a[i]*a[k]*a[j]); 
            }
        }
        return f[0][n+1];
    }
};
