https://leetcode.com/problems/longest-palindromic-subsequence/
516. Longest Palindromic Subsequence


class Solution {
public:
    int longestPalindromeSubseq(string s) {
        //最长回文序列，可以不连续
        //f[i][j] = max(f[i+1][j], f[i][j-1], f[i+1][j-1]+2|s[i]==s[j])
        int n = s.size();
        if(n==0)
            return 0;
        int f[n][n];
        int j;
        //init
        //length=1
        for(int i=0; i<n; i++)
           f[i][i] = 1;   
        //length=2
        for(int i=0; i<n-1; i++)
            f[i][i+1] = (s[i]==s[i+1])? 2 : 1 ;
        
        for(int len=3; len<=n; len++){
            for(int i=0; i<=n-len; ++i){
                //左端点：i; 右端点:j
                j = i+len-1;
                f[i][j] = max(f[i][j-1], f[i+1][j]);
                if(s[i] == s[j])
                    f[i][j] = max(f[i][j], f[i+1][j-1]+2); 
            }
        }
       return f[0][n-1]; 
    }
};
