https://www.lintcode.com/problem/decode-ways/description
// 512 解码方法

class Solution {
public:
    /**
     * @param s: a string,  encoded message
     * @return: an integer, the number of ways decoding
     */
    int numDecodings(string &s) {
        // write your code here
        int n = s.size();
        if(n==0)
            return 0;
        int f[n+1];  //s的前i个数字被解密为字母串有f[i]种方式
        f[0] = 1;  //初始条件：空串只能解密为空串
        
        for(int i=1; i<=n; ++i){  
            f[i] = 0;
            int t = s[i-1]-'0';
            
            //last digit
            if(t >= 1 && t<=9 )
                f[i] += f[i-1];
            
            //last two digits
            if(i>=2){
                t = (s[i-2]-'0')*10 + s[i-1]-'0';
                if(t>=10 && t<=26)
                    f[i] += f[i-2];
            } 
        }
        
        return f[n];
    }
};
